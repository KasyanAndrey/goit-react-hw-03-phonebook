{"version":3,"sources":["componets/ContactForm/ContactForm.module.css","componets/ContactForm/ContactForm.jsx","componets/ContactList/ContactList.jsx","componets/Filter/Filter.jsx","App.js","index.js","componets/ContactList/ContactList.module.css","componets/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSabmit","preventDefault","props","onSubmit","reset","this","nameInputId","uuidv4","numberInputId","className","s","form","title","htmlFor","type","onChange","pattern","id","required","input","btn","Component","ContactList","contacts","onDeletContacts","list","map","item","onClick","Filter","App","filter","formSubmitHandler","contact","find","alert","changeFilter","getVisibleContacts","normalezedFilter","toLowerCase","toLocaleLowerCase","includes","deletContacts","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProp","prevState","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,4BAA4B,IAAM,yBAAyB,MAAQ,6B,+JC8EnJC,E,4MAxEbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBAEN,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBW,KAAKb,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAERY,EAAcC,cACdC,EAAgBD,cAEtB,OACE,uBAAMJ,SAAUE,KAAKL,aAAcS,UAAWC,IAAEC,KAAhD,UACE,mBAAGF,UAAWC,IAAEE,MAAhB,kBACA,uBAAOC,QAASP,EAAhB,SACE,uBACEQ,KAAK,OACLrB,KAAK,OACLK,MAAOL,EACPsB,SAAUV,KAAKV,aACfqB,QAAQ,yHACRJ,MAAM,kcACNK,GAAIX,EACJY,UAAQ,EACRT,UAAWC,IAAES,UAIjB,mBAAGV,UAAWC,IAAEE,MAAhB,oBACA,uBAAOC,QAASL,EAAhB,SACE,uBACEM,KAAK,MACLrB,KAAK,SACLK,MAAOJ,EACPqB,SAAUV,KAAKV,aACfqB,QAAQ,yFACRJ,MAAM,giBACNK,GAAIT,EACJU,UAAQ,EACRT,UAAWC,IAAES,MAAQ,IAAMT,IAAEhB,WAIjC,wBAAQoB,KAAK,SAASL,UAAWC,IAAEU,IAAnC,gC,GA7DkBC,a,gBCkBXC,EAnBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,oBAAIf,UAAWC,IAAEe,KAAjB,SACGF,EAASG,KAAI,gBAAGT,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIe,UAAWC,IAAEiB,KAAjB,UACE,8BAAIlC,EAAJ,OACA,4BAAIC,IACJ,wBAAQkC,QAAS,kBAAMJ,EAAgBP,IAAKR,UAAWC,IAAEU,IAAzD,sBAH0BH,S,gBCSnBY,EAZA,SAAC,GAAD,IAAG/B,EAAH,EAAGA,MAAOiB,EAAV,EAAUA,SAAV,OACb,wBAAOF,QAAQ,GAAf,UACE,mBAAGJ,UAAWC,IAAEE,MAAhB,mCACA,uBAAOE,KAAK,OAAOhB,MAAOA,EAAOiB,SAAUA,EAAUN,UAAWC,IAAES,YCqFvDW,E,4MAnFbtC,MAAQ,CACN+B,SAAU,CACR,CAAEN,GAAI,OAAQxB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuB,GAAI,OAAQxB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEuB,GAAI,OAAQxB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuB,GAAI,OAAQxB,KAAM,iBAAkBC,OAAQ,cAEhDqC,OAAQ,I,EAmBVC,kBAAoB,YAAuB,IAApBvC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACrBuC,EAAU,CACdhB,GAAIV,cACJd,OACAC,UAGE,EAAKF,MAAM+B,SAASW,MAAK,SAAAD,GAAO,OAAIA,EAAQxC,OAASA,KACvD0C,MAAM,GAAD,OAAI1C,EAAJ,6BAEL,EAAKM,UAAS,gBAAGwB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,CAAgBU,S,EAK9BG,aAAe,SAAAxC,GACb,IAAME,EAAQF,EAAMC,cAAcC,MAElC,EAAKC,SAAS,CAAEgC,OAAQjC,K,EAG1BuC,mBAAqB,WACnB,MAA6B,EAAK7C,MAA1BuC,EAAR,EAAQA,OAAQR,EAAhB,EAAgBA,SAEVe,EAAmBP,EAAOQ,cAEhC,OAAOhB,EAASQ,QAAO,SAAAE,GAAO,OAC5BA,EAAQxC,KAAK+C,oBAAoBC,SAASH,O,EAI9CI,cAAgB,SAAAC,GACd,EAAK5C,UAAS,kBAAmB,CAC/BwB,SADY,EAAGA,SACIQ,QAAO,SAAAE,GAAO,OAAIA,EAAQhB,KAAO0B,U,uDAlDxD,WACE,IAAMpB,EAAWqB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMzB,GAE9BuB,GACFzC,KAAKN,SAAS,CAAEwB,SAAUuB,M,gCAI9B,SAAmBG,EAAUC,GAC3B,IAAQ3B,EAAalB,KAAKb,MAAlB+B,SACJA,IAAa2B,EAAU3B,UACzBqB,aAAaO,QAAQ,WAAYJ,KAAKK,UAAU7B,M,oBA0CpD,WACE,IAAQQ,EAAW1B,KAAKb,MAAhBuC,OACFsB,EAAkBhD,KAAKgC,qBAE7B,OACE,gCACE,2CACA,cAAC,EAAD,CAAalC,SAAUE,KAAK2B,oBAC5B,0CACA,cAAC,EAAD,CAAQlC,MAAOiC,EAAQhB,SAAUV,KAAK+B,eACtC,cAAC,EAAD,CACEb,SAAU8B,EACV7B,gBAAiBnB,KAAKqC,uB,GA7EdrB,aCJlBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BrE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,2B,kBCA1FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.49cccbe3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2SeH8\",\"input\":\"ContactForm_input__3nvyJ\",\"number\":\"ContactForm_number__2ZxCF\",\"btn\":\"ContactForm_btn__XigsM\",\"title\":\"ContactForm_title__3Rdv4\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSabmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    const nameInputId = uuidv4();\r\n    const numberInputId = uuidv4();\r\n\r\n    return (\r\n      <form onSubmit={this.handleSabmit} className={s.form}>\r\n        <p className={s.title}>Name</p>\r\n        <label htmlFor={nameInputId}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            id={nameInputId}\r\n            required\r\n            className={s.input}\r\n          />\r\n        </label>\r\n\r\n        <p className={s.title}>Number</p>\r\n        <label htmlFor={numberInputId}>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            id={numberInputId}\r\n            required\r\n            className={s.input + ' ' + s.number}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeletContacts }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={s.item} key={id}>\r\n        <p>{name}:</p>\r\n        <p>{number}</p>\r\n        <button onClick={() => onDeletContacts(id)} className={s.btn}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDeletContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label htmlFor=\"\">\r\n    <p className={s.title}>Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChange} className={s.input} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './componets/ContactForm';\nimport ContactList from './componets/ContactList';\nimport Filter from './componets/Filter';\n\nimport './index.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = event => {\n    const value = event.currentTarget.value;\n\n    this.setState({ filter: value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalezedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalezedFilter),\n    );\n  };\n\n  deletContacts = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeletContacts={this.deletContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__hRCWw\",\"item\":\"ContactList_item__itgrC\",\"btn\":\"ContactList_btn__pn0zc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__sF8kB\",\"input\":\"Filter_input__1kEkh\"};"],"sourceRoot":""}